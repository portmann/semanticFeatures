colnames(Rf) <- c("Date","Rf")
Rf$Date <- as.Date(Rf$Date,"%Y-%m-%d")
##### Benchmark Rate #####
file4 <-"SP500.csv"
SP500 <- read.csv(file4, header = TRUE, sep = ",")
SP500$Date <- as.Date(SP500$Date,"%Y-%m-%d")
SP500 <- SP500[order(SP500$Date),]
Rm <- diff(SP500$Adj.Close)/(SP500$Adj.Close[1:length(SP500$Adj.Close)-1])*100
Rm <- c(0, Rm)
SP500$Rm <- Rm
##### Creating Price dataframe #####
Price <- merge(x = StockPrice[,c("Date","Adj.Close","Volume","R","PB")], y = Rf, by = "Date", all.x = T)
Price <- merge(x = Price, y = SP500[c("Date","Rm")], by = "Date", all.x = T)
az <- zoo(Price$Rf)
az <- na.locf(az)
Price$Rf <- as.vector(az)
Beta = BetaSet[[Name]]
View(Price)
Price$Re <- Price$Rf + Beta*(Price$Rm - Price$Rf)
Price$Ra <- Price$R - Price$Re
Price$Rd <- ifelse(Price$Ra > 0, 1, 0)
##### Earning Announcement Day #####
EAD <-  Earning[[Name]][,1]
ES <- as.double(Earning[[Name]][,2])
##### Feature #####
file2 <-  paste("Features\\", paste(Name, "Reuters.csv",sep = ""), sep = "")
FeaturesRaw <- read.csv(file2, header = TRUE, sep = ",")
FeaturesRaw$Date <- as.Date(FeaturesRaw$Date,"%Y-%m-%d")
FeaturesRaw <- FeaturesRaw[order(FeaturesRaw$Date),]
FeaturesRaw <- FeaturesRaw[2:nrow(FeaturesRaw),]
FeaturesRaw$Counts <- rep(1,nrow(FeaturesRaw))
features1 <- aggregate(FeaturesRaw[c("Value_Positive","Uncertainty","Surprise","Counts")],by = list(FeaturesRaw$Date),FUN = sum)
features2 <- aggregate(FeaturesRaw[c("Valence_Pos","Valence_Neg")],by = list(FeaturesRaw$Date),FUN = mean)
colnames(features1)[1] <- "Date"
colnames(features2)[1] <- "Date"
Features <- merge(x = features1, y = features2, by = "Date", all = TRUE)
Features$Date <- as.Date(Features$Date,"%Y-%m-%d")
file2.2 <-  paste("Features\\", paste(Name, "Seeking_Alpha.csv",sep = ""), sep = "")
FeaturesRaw <- read.csv(file2.2, header = TRUE, sep = ",")
FeaturesRaw$Date <- as.Date(FeaturesRaw$Date,"%Y-%m-%d")
FeaturesRaw <- FeaturesRaw[order(FeaturesRaw$Date),]
FeaturesRaw <- FeaturesRaw[2:nrow(FeaturesRaw),]
FeaturesRaw$Counts <- rep(1,nrow(FeaturesRaw))
features1 <- aggregate(FeaturesRaw[c("Value_Positive","Uncertainty","Surprise","Counts")],by = list(FeaturesRaw$Date),FUN = sum)
features2 <- aggregate(FeaturesRaw[c("Valence_Pos","Valence_Neg")],by = list(FeaturesRaw$Date),FUN = mean)
colnames(features1)[1] <- "Date"
colnames(features2)[1] <- "Date"
Features2 <- merge(x = features1, y = features2, by = "Date", all = TRUE)
Features2$Date <- as.Date(Features2$Date,"%Y-%m-%d")
Feature <- rbind(Features,Features2)
Feature <- Feature[order(Feature$Date),]
features1 <- aggregate(Feature[c("Value_Positive","Uncertainty","Surprise","Counts")],by = list(Feature$Date),FUN = sum)
features2 <- aggregate(Feature[c("Valence_Pos","Valence_Neg")],by = list(Feature$Date),FUN = mean)
colnames(features1)[1] <- "Date"
colnames(features2)[1] <- "Date"
Feature <- merge(x = features1, y = features2, by = "Date", all = TRUE)
##### Calculate the culmulative return between two earning announcement days #####
EADIndex <- c(1,match(EAD,Price$Date),nrow(Price)+1)
getCumsum <- function(IND, Vector) {
lis <- list()
for (i in 1:(length(IND)-1)) {
lis[[i]] <- cumsum(Vector[IND[i]:(IND[i+1]-1)])
}
lis
}
List2Vec <- function(List){
Vec <- c()
for (i in 1:length(List)) {
Vec <- c(Vec,List[[i]])
}
Vec
}
Price$CAR <- List2Vec(getCumsum(EADIndex,Price$Ra))
##### Calculate the culmulative value of features between two earning announcement days #####
EADIndex2 <- c(1,match(EAD,Feature$Date),nrow(Feature)+1)
EADIndex2 <- EADIndex2[!is.na(EADIndex2)]
Feature$CumPos <- List2Vec(getCumsum(EADIndex2,Feature$Valence_Pos))
Feature$CumNeg <- List2Vec(getCumsum(EADIndex2,Feature$Valence_Neg))
Feature$CumUncertainty <- List2Vec(getCumsum(EADIndex2,Feature$Uncertainty))
Feature$CumSurprise <- List2Vec(getCumsum(EADIndex2,Feature$Surprise))
##### Integrate df #####
df <- merge(x = Feature, y = Price[,c("Date","Adj.Close","Volume","Ra","CAR","PB")], by = "Date", all.x = T)
na.lomf <- function(x,a=!is.na(x)){
x[which(a)[c(1,1:sum(a))][cumsum(a)+1]]
}
df$Ra <- na.lomf(df$Ra)
df$CAR <- na.lomf(df$CAR)
df$Volume <- na.lomf(df$Volume)
df[is.na(df)] <- 0
df$Ra <- (df$Ra-mean(df$Ra))/sd(df$Ra)
df$CAR <- (df$CAR-mean(df$CAR))/sd(df$CAR)
df$Valence_Pos <- (df$Valence_Pos-mean(df$Valence_Pos))/sd(df$Valence_Pos)
df$Valence_Neg <- (df$Valence_Neg-mean(df$Valence_Neg))/sd(df$Valence_Neg)
df$CumPos <- (df$CumPos-mean(df$CumPos))/sd(df$CumPos)
df$CumNeg <- (df$CumNeg-mean(df$CumNeg))/sd(df$CumNeg)
df$Volume <- (df$Volume-mean(df$Volume))/sd(df$Volume)
df$CumSurprise <- (df$CumSurprise-mean(df$CumSurprise))/sd(df$CumSurprise)
df$CumUncertainty <- (df$CumUncertainty-mean(df$CumUncertainty))/sd(df$CumUncertainty)
fit <- lm(df$CAR ~ df$CumPos + df$CumNeg + +df$CumSurprise + df$CumUncertainty  + df$PB)
source('C:/Users/Ming Deng/Desktop/Thesis Code/semanticFeatures/empiricalAnalysis/Apple.R', echo=TRUE)
summary(fit)
fit <- lm(df$CAR ~ df$CumPos + df$CumNeg + +df$CumSurprise + df$CumUncertainty  + df$PB)
Name <- "Apple"
##### Load Earning Information #####
dat <- readWorksheet(loadWorkbook("EarningSurprise.xlsx"),sheet = 1)
dat <- dat[294:nrow(dat),]
dat$Col1 <- as.Date(as.character(dat$Col1),"%Y-%m-%d")
Earning <- list()
Earning[["Amazon"]]<- dat[dat$X.AMAZON.COM.INCORPORATED.!="NA",][,c(1,12)]
Earning[["Apple"]]<- dat[dat$X.APPLE.INCORPORATED.!="NA",][,c(1,2)]
Earning[["Boeing"]]<- dat[dat$X.THE.BOEING.COMPANY.!="NA",][,c(1,10)]
Earning[["Facebook"]]<- dat[dat$X.FACEBOOK.INCORPORATED.!="NA",][,c(1,11)]
Earning[["Ford"]]<- dat[dat$X.FORD.MOTOR.COMPANY.!="NA",][,c(1,9)]
Earning[["Intel"]]<- dat[dat$X.INTEL.CORPORATION.!="NA",][,c(1,7)]
Earning[["Microsoft"]]<- dat[dat$X.MICROSOFT.CORPORATION.!="NA",][,c(1,8)]
Earning[["Netflix"]]<- dat[dat$X.NETFLIX.INCORPORATED.!="NA",][,c(1,6)]
##### Stock Beta #####
BetaSet <- list()
BetaSet[["Amazon"]] <- 1.0422
BetaSet[["Apple"]] <- 1.55
BetaSet[["Boeing"]] <- 1.0542
BetaSet[["Facebook"]] <- 0.7362
BetaSet[["Ford"]] <- 1.0686
BetaSet[["Intel"]] <- 0.9332
BetaSet[["Microsoft"]] <- 0.8532
BetaSet[["Netflix"]] <- 0.8954
##### Stock Price #####
file <-  paste("Stock\\", paste(Name, " - Copy.csv",sep = ""), sep = "")
# file <-  paste("Stock\\", paste(Name, ".csv",sep = ""), sep = "")
StockPrice <- read.csv(file, header = TRUE, sep = ",")
str(StockPrice)
StockPrice$Date <- as.Date(StockPrice$Date,"%m/%d/%Y")
StockPrice <- StockPrice[order(StockPrice$Date),]
R <- diff(StockPrice$Adj.Close)/(StockPrice$Adj.Close[1:length(StockPrice$Adj.Close)-1])*100
R <- c(0, R)
StockPrice$R <- R
R_bar <- mean(R)
RV <- sqrt((sum(R^2))/(nrow(StockPrice)-1))
##### Risk-Free Rate #####
file3 <- "DTB1YR.csv"
Rf <- read.csv(file3,header = TRUE, sep = ",")
colnames(Rf) <- c("Date","Rf")
Rf$Date <- as.Date(Rf$Date,"%Y-%m-%d")
##### Benchmark Rate #####
file4 <-"SP500.csv"
SP500 <- read.csv(file4, header = TRUE, sep = ",")
SP500$Date <- as.Date(SP500$Date,"%Y-%m-%d")
SP500 <- SP500[order(SP500$Date),]
Rm <- diff(SP500$Adj.Close)/(SP500$Adj.Close[1:length(SP500$Adj.Close)-1])*100
Rm <- c(0, Rm)
SP500$Rm <- Rm
##### Creating Price dataframe #####
Price <- merge(x = StockPrice[,c("Date","Adj.Close","Volume","R","PB")], y = Rf, by = "Date", all.x = T)
Price <- merge(x = Price, y = SP500[c("Date","Rm")], by = "Date", all.x = T)
az <- zoo(Price$Rf)
az <- na.locf(az)
Price$Rf <- as.vector(az)
Beta = BetaSet[[Name]]
Price$Re <- Price$Rf + Beta*(Price$Rm - Price$Rf)
Price$Ra <- Price$R - Price$Re
Price$Rd <- ifelse(Price$Ra > 0, 1, 0)
##### Earning Announcement Day #####
EAD <-  Earning[[Name]][,1]
ES <- as.double(Earning[[Name]][,2])
##### Feature #####
file2 <-  paste("Features\\", paste(Name, "Reuters.csv",sep = ""), sep = "")
FeaturesRaw <- read.csv(file2, header = TRUE, sep = ",")
FeaturesRaw$Date <- as.Date(FeaturesRaw$Date,"%Y-%m-%d")
FeaturesRaw <- FeaturesRaw[order(FeaturesRaw$Date),]
FeaturesRaw <- FeaturesRaw[2:nrow(FeaturesRaw),]
FeaturesRaw$Counts <- rep(1,nrow(FeaturesRaw))
features1 <- aggregate(FeaturesRaw[c("Value_Positive","Uncertainty","Surprise","Counts")],by = list(FeaturesRaw$Date),FUN = sum)
features2 <- aggregate(FeaturesRaw[c("Valence_Pos","Valence_Neg")],by = list(FeaturesRaw$Date),FUN = mean)
colnames(features1)[1] <- "Date"
colnames(features2)[1] <- "Date"
Features <- merge(x = features1, y = features2, by = "Date", all = TRUE)
Features$Date <- as.Date(Features$Date,"%Y-%m-%d")
file2.2 <-  paste("Features\\", paste(Name, "Seeking_Alpha.csv",sep = ""), sep = "")
FeaturesRaw <- read.csv(file2.2, header = TRUE, sep = ",")
FeaturesRaw$Date <- as.Date(FeaturesRaw$Date,"%Y-%m-%d")
FeaturesRaw <- FeaturesRaw[order(FeaturesRaw$Date),]
FeaturesRaw <- FeaturesRaw[2:nrow(FeaturesRaw),]
FeaturesRaw$Counts <- rep(1,nrow(FeaturesRaw))
features1 <- aggregate(FeaturesRaw[c("Value_Positive","Uncertainty","Surprise","Counts")],by = list(FeaturesRaw$Date),FUN = sum)
features2 <- aggregate(FeaturesRaw[c("Valence_Pos","Valence_Neg")],by = list(FeaturesRaw$Date),FUN = mean)
colnames(features1)[1] <- "Date"
colnames(features2)[1] <- "Date"
Features2 <- merge(x = features1, y = features2, by = "Date", all = TRUE)
Features2$Date <- as.Date(Features2$Date,"%Y-%m-%d")
Feature <- rbind(Features,Features2)
Feature <- Feature[order(Feature$Date),]
features1 <- aggregate(Feature[c("Value_Positive","Uncertainty","Surprise","Counts")],by = list(Feature$Date),FUN = sum)
features2 <- aggregate(Feature[c("Valence_Pos","Valence_Neg")],by = list(Feature$Date),FUN = mean)
colnames(features1)[1] <- "Date"
colnames(features2)[1] <- "Date"
Feature <- merge(x = features1, y = features2, by = "Date", all = TRUE)
##### Calculate the culmulative return between two earning announcement days #####
EADIndex <- c(1,match(EAD,Price$Date),nrow(Price)+1)
getCumsum <- function(IND, Vector) {
lis <- list()
for (i in 1:(length(IND)-1)) {
lis[[i]] <- cumsum(Vector[IND[i]:(IND[i+1]-1)])
}
lis
}
List2Vec <- function(List){
Vec <- c()
for (i in 1:length(List)) {
Vec <- c(Vec,List[[i]])
}
Vec
}
Price$CAR <- List2Vec(getCumsum(EADIndex,Price$Ra))
##### Calculate the culmulative value of features between two earning announcement days #####
EADIndex2 <- c(1,match(EAD,Feature$Date),nrow(Feature)+1)
EADIndex2 <- EADIndex2[!is.na(EADIndex2)]
Feature$CumPos <- List2Vec(getCumsum(EADIndex2,Feature$Valence_Pos))
Feature$CumNeg <- List2Vec(getCumsum(EADIndex2,Feature$Valence_Neg))
Feature$CumUncertainty <- List2Vec(getCumsum(EADIndex2,Feature$Uncertainty))
Feature$CumSurprise <- List2Vec(getCumsum(EADIndex2,Feature$Surprise))
df <- merge(x = Feature, y = Price[,c("Date","Adj.Close","Volume","Ra","CAR","PB")], by = "Date", all.x = T)
df$Ra <- na.lomf(df$Ra)
df$CAR <- na.lomf(df$CAR)
df$Volume <- na.lomf(df$Volume)
df[is.na(df)] <- 0
df$Ra <- (df$Ra-mean(df$Ra))/sd(df$Ra)
df$CAR <- (df$CAR-mean(df$CAR))/sd(df$CAR)
df$Valence_Pos <- (df$Valence_Pos-mean(df$Valence_Pos))/sd(df$Valence_Pos)
df$Valence_Neg <- (df$Valence_Neg-mean(df$Valence_Neg))/sd(df$Valence_Neg)
df$CumPos <- (df$CumPos-mean(df$CumPos))/sd(df$CumPos)
df$CumNeg <- (df$CumNeg-mean(df$CumNeg))/sd(df$CumNeg)
df$Volume <- (df$Volume-mean(df$Volume))/sd(df$Volume)
df$CumSurprise <- (df$CumSurprise-mean(df$CumSurprise))/sd(df$CumSurprise)
df$CumUncertainty <- (df$CumUncertainty-mean(df$CumUncertainty))/sd(df$CumUncertainty)
na.lomf <- function(x,a=!is.na(x)){
x[which(a)[c(1,1:sum(a))][cumsum(a)+1]]
}
df$Ra <- na.lomf(df$Ra)
df$CAR <- na.lomf(df$CAR)
df$Volume <- na.lomf(df$Volume)
##### Load Earning Information #####
dat <- readWorksheet(loadWorkbook("EarningSurprise.xlsx"),sheet = 1)
dat <- dat[294:nrow(dat),]
dat$Col1 <- as.Date(as.character(dat$Col1),"%Y-%m-%d")
Earning <- list()
Earning[["Amazon"]]<- dat[dat$X.AMAZON.COM.INCORPORATED.!="NA",][,c(1,12)]
Earning[["Apple"]]<- dat[dat$X.APPLE.INCORPORATED.!="NA",][,c(1,2)]
Earning[["Boeing"]]<- dat[dat$X.THE.BOEING.COMPANY.!="NA",][,c(1,10)]
Earning[["Facebook"]]<- dat[dat$X.FACEBOOK.INCORPORATED.!="NA",][,c(1,11)]
Earning[["Ford"]]<- dat[dat$X.FORD.MOTOR.COMPANY.!="NA",][,c(1,9)]
Earning[["Intel"]]<- dat[dat$X.INTEL.CORPORATION.!="NA",][,c(1,7)]
Earning[["Microsoft"]]<- dat[dat$X.MICROSOFT.CORPORATION.!="NA",][,c(1,8)]
Earning[["Netflix"]]<- dat[dat$X.NETFLIX.INCORPORATED.!="NA",][,c(1,6)]
##### Stock Beta #####
BetaSet <- list()
BetaSet[["Amazon"]] <- 1.0422
BetaSet[["Apple"]] <- 1.55
BetaSet[["Boeing"]] <- 1.0542
BetaSet[["Facebook"]] <- 0.7362
BetaSet[["Ford"]] <- 1.0686
BetaSet[["Intel"]] <- 0.9332
BetaSet[["Microsoft"]] <- 0.8532
BetaSet[["Netflix"]] <- 0.8954
##### Stock Price #####
file <-  paste("Stock\\", paste(Name, " - Copy.csv",sep = ""), sep = "")
# file <-  paste("Stock\\", paste(Name, ".csv",sep = ""), sep = "")
StockPrice <- read.csv(file, header = TRUE, sep = ",")
str(StockPrice)
StockPrice$Date <- as.Date(StockPrice$Date,"%m/%d/%Y")
StockPrice <- StockPrice[order(StockPrice$Date),]
R <- diff(StockPrice$Adj.Close)/(StockPrice$Adj.Close[1:length(StockPrice$Adj.Close)-1])*100
R <- c(0, R)
StockPrice$R <- R
R_bar <- mean(R)
RV <- sqrt((sum(R^2))/(nrow(StockPrice)-1))
##### Risk-Free Rate #####
file3 <- "DTB1YR.csv"
Rf <- read.csv(file3,header = TRUE, sep = ",")
colnames(Rf) <- c("Date","Rf")
Rf$Date <- as.Date(Rf$Date,"%Y-%m-%d")
##### Benchmark Rate #####
file4 <-"SP500.csv"
SP500 <- read.csv(file4, header = TRUE, sep = ",")
SP500$Date <- as.Date(SP500$Date,"%Y-%m-%d")
SP500 <- SP500[order(SP500$Date),]
Rm <- diff(SP500$Adj.Close)/(SP500$Adj.Close[1:length(SP500$Adj.Close)-1])*100
Rm <- c(0, Rm)
SP500$Rm <- Rm
##### Creating Price dataframe #####
Price <- merge(x = StockPrice[,c("Date","Adj.Close","Volume","R","PB")], y = Rf, by = "Date", all.x = T)
Price <- merge(x = Price, y = SP500[c("Date","Rm")], by = "Date", all.x = T)
az <- zoo(Price$Rf)
az <- na.locf(az)
Price$Rf <- as.vector(az)
Beta = BetaSet[[Name]]
Price$Re <- Price$Rf + Beta*(Price$Rm - Price$Rf)
Price$Ra <- Price$R - Price$Re
Price$Rd <- ifelse(Price$Ra > 0, 1, 0)
##### Earning Announcement Day #####
EAD <-  Earning[[Name]][,1]
ES <- as.double(Earning[[Name]][,2])
##### Feature #####
file2 <-  paste("Features\\", paste(Name, "Reuters.csv",sep = ""), sep = "")
FeaturesRaw <- read.csv(file2, header = TRUE, sep = ",")
FeaturesRaw$Date <- as.Date(FeaturesRaw$Date,"%Y-%m-%d")
FeaturesRaw <- FeaturesRaw[order(FeaturesRaw$Date),]
FeaturesRaw <- FeaturesRaw[2:nrow(FeaturesRaw),]
FeaturesRaw$Counts <- rep(1,nrow(FeaturesRaw))
features1 <- aggregate(FeaturesRaw[c("Value_Positive","Uncertainty","Surprise","Counts")],by = list(FeaturesRaw$Date),FUN = sum)
features2 <- aggregate(FeaturesRaw[c("Valence_Pos","Valence_Neg")],by = list(FeaturesRaw$Date),FUN = mean)
colnames(features1)[1] <- "Date"
colnames(features2)[1] <- "Date"
Features <- merge(x = features1, y = features2, by = "Date", all = TRUE)
Features$Date <- as.Date(Features$Date,"%Y-%m-%d")
file2.2 <-  paste("Features\\", paste(Name, "Seeking_Alpha.csv",sep = ""), sep = "")
FeaturesRaw <- read.csv(file2.2, header = TRUE, sep = ",")
FeaturesRaw$Date <- as.Date(FeaturesRaw$Date,"%Y-%m-%d")
FeaturesRaw <- FeaturesRaw[order(FeaturesRaw$Date),]
FeaturesRaw <- FeaturesRaw[2:nrow(FeaturesRaw),]
FeaturesRaw$Counts <- rep(1,nrow(FeaturesRaw))
features1 <- aggregate(FeaturesRaw[c("Value_Positive","Uncertainty","Surprise","Counts")],by = list(FeaturesRaw$Date),FUN = sum)
features2 <- aggregate(FeaturesRaw[c("Valence_Pos","Valence_Neg")],by = list(FeaturesRaw$Date),FUN = mean)
colnames(features1)[1] <- "Date"
colnames(features2)[1] <- "Date"
Features2 <- merge(x = features1, y = features2, by = "Date", all = TRUE)
Features2$Date <- as.Date(Features2$Date,"%Y-%m-%d")
Feature <- rbind(Features,Features2)
Feature <- Feature[order(Feature$Date),]
features1 <- aggregate(Feature[c("Value_Positive","Uncertainty","Surprise","Counts")],by = list(Feature$Date),FUN = sum)
features2 <- aggregate(Feature[c("Valence_Pos","Valence_Neg")],by = list(Feature$Date),FUN = mean)
colnames(features1)[1] <- "Date"
colnames(features2)[1] <- "Date"
Feature <- merge(x = features1, y = features2, by = "Date", all = TRUE)
##### Calculate the culmulative return between two earning announcement days #####
EADIndex <- c(1,match(EAD,Price$Date),nrow(Price)+1)
getCumsum <- function(IND, Vector) {
lis <- list()
for (i in 1:(length(IND)-1)) {
lis[[i]] <- cumsum(Vector[IND[i]:(IND[i+1]-1)])
}
lis
}
List2Vec <- function(List){
Vec <- c()
for (i in 1:length(List)) {
Vec <- c(Vec,List[[i]])
}
Vec
}
Price$CAR <- List2Vec(getCumsum(EADIndex,Price$Ra))
##### Calculate the culmulative value of features between two earning announcement days #####
EADIndex2 <- c(1,match(EAD,Feature$Date),nrow(Feature)+1)
EADIndex2 <- EADIndex2[!is.na(EADIndex2)]
Feature$CumPos <- List2Vec(getCumsum(EADIndex2,Feature$Valence_Pos))
Feature$CumNeg <- List2Vec(getCumsum(EADIndex2,Feature$Valence_Neg))
Feature$CumUncertainty <- List2Vec(getCumsum(EADIndex2,Feature$Uncertainty))
Feature$CumSurprise <- List2Vec(getCumsum(EADIndex2,Feature$Surprise))
df <- merge(x = Feature, y = Price[,c("Date","Adj.Close","Volume","Ra","CAR","PB")], by = "Date", all.x = T)
na.lomf <- function(x,a=!is.na(x)){
x[which(a)[c(1,1:sum(a))][cumsum(a)+1]]
}
df$Ra <- na.lomf(df$Ra)
df$CAR <- na.lomf(df$CAR)
df$Volume <- na.lomf(df$Volume)
df[is.na(df)] <- 0
df$Ra <- (df$Ra-mean(df$Ra))/sd(df$Ra)
df$CAR <- (df$CAR-mean(df$CAR))/sd(df$CAR)
df$Valence_Pos <- (df$Valence_Pos-mean(df$Valence_Pos))/sd(df$Valence_Pos)
df$Valence_Neg <- (df$Valence_Neg-mean(df$Valence_Neg))/sd(df$Valence_Neg)
df$CumPos <- (df$CumPos-mean(df$CumPos))/sd(df$CumPos)
df$CumNeg <- (df$CumNeg-mean(df$CumNeg))/sd(df$CumNeg)
df$Volume <- (df$Volume-mean(df$Volume))/sd(df$Volume)
df$CumSurprise <- (df$CumSurprise-mean(df$CumSurprise))/sd(df$CumSurprise)
df$CumUncertainty <- (df$CumUncertainty-mean(df$CumUncertainty))/sd(df$CumUncertainty)
fit <- lm(df$CAR ~ df$CumPos + df$CumNeg + +df$CumSurprise + df$CumUncertainty  + df$PB)
summary(fit)
datROA <- readWorksheet(loadWorkbook("Variables.xlsx"),sheet = 1)
rm(list = ls())
dev.off()
cat("\014")
library(zoo)
library(ellipse)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jdk1.8.0_73\\jre')
library(xlsx)
library(XLConnect)
datROA <- readWorksheet(loadWorkbook("Variables.xlsx"),sheet = 1)
datROA$Col1 <- as.Date(as.character(dat$Col1),"%Y-%m-%d")
datROA$Col1 <- as.Date(as.character(dat$Col1),"%Y-%m-%d")
datROA$Col1 <- as.Date(as.character(datROA$Col1),"%Y-%m-%d")
View(datROA)
datROA <- readWorksheet(loadWorkbook("Variables.xlsx"),sheet = 1)
datROA$Col1 <- as.Date(as.character(datROA$Col1),"%Y-%m-%d")
View(datROA)
datROA <- readWorksheet(loadWorkbook("Variables.xlsx"),sheet = 1)
str(datROA)
as.character(dat$Col1)
as.character(datROA$Col1)
View(datROA)
datROA$ROA <- as.Date(as.character(datROA$ROA),"%Y-%m-%d")
View(datROA)
str(datROA)
ROA <- list()
ROA <- list()
dat <- readWorksheet(loadWorkbook("EarningSurprise.xlsx"),sheet = 1)
dat <- dat[294:nrow(dat),]
dat$Col1 <- as.Date(as.character(dat$Col1),"%Y-%m-%d")
Earning <- list()
Earning[["Amazon"]]<- dat[dat$X.AMAZON.COM.INCORPORATED.!="NA",][,c(1,12)]
Earning[["Apple"]]<- dat[dat$X.APPLE.INCORPORATED.!="NA",][,c(1,2)]
Earning[["Boeing"]]<- dat[dat$X.THE.BOEING.COMPANY.!="NA",][,c(1,10)]
Earning[["Facebook"]]<- dat[dat$X.FACEBOOK.INCORPORATED.!="NA",][,c(1,11)]
Earning[["Ford"]]<- dat[dat$X.FORD.MOTOR.COMPANY.!="NA",][,c(1,9)]
Earning[["Intel"]]<- dat[dat$X.INTEL.CORPORATION.!="NA",][,c(1,7)]
Earning[["Microsoft"]]<- dat[dat$X.MICROSOFT.CORPORATION.!="NA",][,c(1,8)]
Earning[["Netflix"]]<- dat[dat$X.NETFLIX.INCORPORATED.!="NA",][,c(1,6)]
str(Earning[["Amazon"]])
colnames(datROA)[1] <- "Date"
View(datROA)
ROA[["Amazon"]] <- datROA[c("Date","Amazon")]
ROA
ROA <- list()
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
ROA[[name]] <- datROAc[("Date",name)]
}
ROA <- list()
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
ROA[[name]] <- datROA[c("Date",name)]
}
ROA <- list()
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
ROA[[name]] <- datROA[c("Date",name)]
}
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
ROA[[name]] <- datROA[,c("Date",name)]
}
colnames(datROA)[1] <- "Date"
ROA <- list()
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
ROA[[name]] <- datROA[c("Date")]
}
colnames(datROA)[1] <- "Date"
ROA <- list()
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
ROA[[name]] <- datROA[c(name)]
}
##### Stock Beta #####
Name <- "sdf"
c("sdf",Name)
ROA <- list()
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
col <- c("Date",name)
ROA[[name]] <- datROA[col]
}
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
print(name)
col <- c("Date",name)
}
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
print(name)
col <- c("Date",name)
print(col)
}
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
print(name)
col <- paste("Date,",name,sep = "")
print(col)
}
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
col <- paste("Date," ,name ,sep = "")
print(col)
ROA[[name]] <- datROA[col]
}
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
col <- paste("Date," ,name ,sep = "")
print(col)
ROA[[name]] <- datROA[c(col)]
}
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
col <- paste("Date," ,name ,sep = "")
print(c(col))
}
datROA[c("Date,Apple")]
datROA[c("Date","Apple")]
col <- c("Date",name)
col
datROA[col]
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
col <- c("Date",name)
print(c(col))
ROA[[name]] <- datROA[c(col)]
}
View(datROA)
datROA <- readWorksheet(loadWorkbook("Variables.xlsx"),sheet = 1)
datROA$ROA <- as.Date(as.character(datROA$ROA),"%Y-%m-%d")
colnames(datROA)[1] <- "Date"
ROA <- list()
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
col <- c("Date",name)
print(c(col))
ROA[[name]] <- datROA[c(col)]
}
View(datROA)
datROA <- readWorksheet(loadWorkbook("Variables.xlsx"),sheet = 1)
datROA$ROA <- as.Date(as.character(datROA$ROA),"%Y-%m-%d")
colnames(datROA)[1] <- "Date"
ROA <- list()
for (name in c("Apple","Amazon","Boeing","Facebook","Ford","Intel","Microsoft","Netflix")) {
col <- c("Date",name)
print(c(col))
ROA[[name]] <- datROA[c(col)]
}
View(datROA)
